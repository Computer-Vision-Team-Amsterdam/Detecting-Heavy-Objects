# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

jobs:
  - job: Linux
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        Python3.7:
          python.version: '3.7'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: 'Add conda to PATH'

      - script: |
          conda env create -f det2.yml
          source activate det2
          python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'
        displayName: 'Install dependencies'

      - script: |
          source activate det2
          pip install git+https://git@github.com/Computer-Vision-Team-Amsterdam/panorama.git@v0.2.2
        displayName: 'Install panorama'
      - script: |
          conda env create -f det2.yml
          source activate det2
          pytest -s --cov=. --cov-report html --cov-report term-missing
        displayName: 'pytest'


  - job: OSX
    pool:
      vmImage: macOS-latest
    strategy:
      matrix:
        Python3.7:
          python.version: '3.7'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: 'Add conda to PATH'

        # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
        # We need to take ownership if we want to update conda or install packages globally
      - bash: sudo chown -R $USER $CONDA
        displayName: 'Take ownership of conda installation'

      - script: |
          python -m pip install --upgrade pip
          conda env create -f det2.yml
        displayName: 'Create conda env'

      - script: |
          source activate det2

          export MACOSX_DEPLOYMENT_TARGET=10.9
          CC=clang CXX=clang++ ARCHFLAGS="-arch x86_64" python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'
        displayName: 'Install dependencies'

      - script: |
          source activate det2
          pip install git+https://git@github.com/Computer-Vision-Team-Amsterdam/panorama.git@v0.2.2
        displayName: 'Install panorama'

      - script: |
          source activate det2
          pytest -s --cov=. --cov-report html --cov-report term-missing
        displayName: 'pytest'


  - job: Style
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        Python3.7:
          python.version: '3.7'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: 'Add conda to PATH'

      - script: |
          conda env create -f det2.yml
        displayName: 'Create conda environment from yml file'

      - script: |
          source activate det2
          python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'
        displayName: 'Install detectron2'

      - script: |
          source activate det2
          pip install git+https://git@github.com/Computer-Vision-Team-Amsterdam/panorama.git@v0.2.2
        displayName: 'Install panorama'

      - script: |
          source activate det2
          isort .
        displayName: 'isort'

      - script: |
          source activate det2
          black .
        displayName: 'black'

      - script: |
          source activate det2
          mypy --ignore-missing-imports --config-file=.mypyrc .
        displayName: 'mypy'

      - script: |
          source activate det2
          pylint --jobs=0 --rcfile=.pylintrc *.py --disable=W,C,R evaluation.py
        displayName: 'pylint'

